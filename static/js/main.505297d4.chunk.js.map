{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","React","memo","goods","map","id","color","name","style","getAll","fetch","then","response","json","catch","error","Error","App","useState","setGoods","handleGoods","type","a","sort","goodA","goodB","localeCompare","slice","filter","good","className","onClick","ReactDOM","render","document","getElementById"],"mappings":"8PAOaA,EAA6BC,IAAMC,MAAK,gBAAGC,EAAH,EAAGA,MAAH,OACnD,6BACGA,EAAMC,KACL,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACE,oBAEE,UAAQ,OACRC,MAAO,CAAEF,SAHX,SAKGC,GAJIF,WCPR,SAASI,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAM,4BAA6BD,MAI5C,ICNME,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOf,EAAP,KAAcgB,EAAd,KAEMC,EAAW,uCAAG,WAAOC,GAAP,SAAAC,EAAA,oEAERD,EAFQ,OAGT,aAHS,OAOT,cAPS,QAWT,aAXS,oCAIZF,EAJY,SAIGV,IAJH,kFAQZU,EARY,UDIbV,IACJE,MAAK,SAAAR,GAAK,OAAIA,EAAMoB,MACnB,SAACC,EAAOC,GAAR,OAAkBD,EAAMjB,KAAKmB,cAAcD,EAAMlB,SACjDoB,MAAM,EAAG,MCPO,mFAYZR,EAZY,UDWbV,IACJE,MAAK,SAAAR,GAAK,OAAIA,EAAMyB,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKvB,YCZvB,6EAgBN,IAAIU,MAAM,2BAhBJ,gEAmBV,IAAIA,MAAM,mBAnBA,0DAAH,sDAuBjB,OACE,sBAAKc,UAAU,MAAf,UACE,uDAEA,wBACET,KAAK,SACL,UAAQ,aACRU,QAAS,kBAAMX,EAAY,aAH7B,4BAQA,wBACEC,KAAK,SACL,UAAQ,oBACRU,QAAS,kBAAMX,EAAY,cAH7B,gCAQA,wBACEC,KAAK,SACL,UAAQ,aACRU,QAAS,kBAAMX,EAAY,aAH7B,4BAQA,cAACpB,EAAD,CAAWG,MAAOA,QC1DxB6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.505297d4.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(({ goods }) => (\n  <ul>\n    {goods.map(\n      ({ id, color, name }) => (\n        <li\n          key={id}\n          data-cy=\"good\"\n          style={{ color }}\n        >\n          {name}\n        </li>\n      ),\n    )}\n  </ul>\n));\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json())\n    .catch(error => {\n      throw new Error('Error while loading goods', error);\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods.sort(\n      (goodA, goodB) => goodA.name.localeCompare(goodB.name),\n    ).slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const handleGoods = async (type: string) => {\n    try {\n      switch (type) {\n        case 'allGoods':\n          setGoods(await getAll());\n          break;\n\n        case 'firstFive':\n          setGoods(await get5First());\n          break;\n\n        case 'redGoods':\n          setGoods(await getRedGoods());\n          break;\n\n        default:\n          throw new Error('Invalid goods selection');\n      }\n    } catch {\n      throw new Error('Goods not found');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => handleGoods('allGoods')}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => handleGoods('firstFive')}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => handleGoods('redGoods')}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}